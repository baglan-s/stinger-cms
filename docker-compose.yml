version: '3.8'

networks:
  stinger-cms:
    driver: bridge

services:
  nginx:
    image: nginx:stable-alpine
    container_name: stinger-nginx
    ports:
      - 7003:7003
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx
      - ./src:/app
    networks:
      - stinger-cms
    depends_on:
      - php
  
  postgres:
    image: postgres:14-alpine3.15
    container_name: stinger-postgres
    ports:
      - "5437:5432"
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      DB_DATABASE_TESTING: ${DB_DATABASE_TESTING}
    volumes:
      - ./docker/postgres/pg-data:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - stinger-cms

  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: stinger-php
    env_file:
      - ./src/.env
    environment:
      DATABASE_URL: ${DB_CONNECTION}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}
    volumes:
      - ./src:/app
    networks:
      - stinger-cms

  composer:
    image: composer:latest
    container_name: stinger-composer
    volumes:
      - ./src:/app
    depends_on:
      - php
    networks:
      - stinger-cms
    command: install --ignore-platform-reqs --no-scripts